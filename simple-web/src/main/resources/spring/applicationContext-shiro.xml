<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd">


	<bean id="securityManager"
		class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<!-- <property name="sessionManager" ref="sessionManager"></property> -->
		<property name="realm" ref="myRealm" />
		 <property name="rememberMeManager" ref="rememberMeManager" />
		<property name="cacheManager" ref="cacheManager"></property> 
	</bean>
	
	<bean id="myRealm" class="com.jo.dy.ot.shiro.MyRealm">
		<property name="credentialsMatcher" ref="credentialsMatcher"></property>
	</bean>
	<bean id="credentialsMatcher"
	class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
	<property name="hashAlgorithmName" value="md5" />
	<property name="hashIterations" value="1" />
</bean>
	
	<!-- 缓存管理器 -->
	<bean id="cacheManager"
		class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<property name="cacheManagerConfigFile"
			value="classpath:shiro-ehcache.xml" />
	</bean>

	<bean id="myToken" class="com.jo.dy.ot.shiro.MyTokenFilter"></bean>
	<!-- 启用shrio授权注解拦截方式 -->
	<bean id="shiroFilter"
		class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<!-- 装配 securityManager -->
		<property name="securityManager" ref="securityManager" />
		<!-- 配置登陆页面 -->
		<property name="loginUrl" value="/index.do" />
		<!-- 登陆成功后的一面 -->
		<property name="successUrl" value="/success.do" />
		<property name="unauthorizedUrl" value="/refuse.jsp"></property>
		<property name="filters">
			<map>
				<entry key="token" value-ref="myToken"></entry>
			</map>
		</property>
		<!-- 具体配置需要拦截哪些 URL, 以及访问对应的 URL 时使用 Shiro 的什么 Filter 进行拦截. -->
		<property name="filterChainDefinitions">
			<value>
				/index.do:anon
				/login:anon
				/logout:logout
				/js/*.js=anon
				/token=token
				/**=authc
			</value>
		</property>
		<!-- 直接给 filterChainDefinitionMap赋值,上一种方式采用间接给filterChainDefinitionMap赋值 -->
		<!-- <property name="filterChainDefinitionMap"> <map> <entry key="/index.do" 
			value="anon"></entry> <entry key="/login" value="anon"></entry> <entry key="/logout" 
			value="logout"></entry> <entry key="/js/*.js" value="anon"></entry> <entry 
			key="/**" value="authc"></entry> </map> </property> -->
	</bean>		
	 <!-- rememberMeManager管理器，写cookie，取出cookie生成用户信息 -->
	<bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
		<property name="cookie" ref="rememberMeCookie" />
	</bean>
	<!-- 记住我cookie -->
	<bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<!-- rememberMe是cookie的名字 -->
		<constructor-arg value="rememberMe" />
		<!-- 记住我cookie生效时间30天 -->
		<property name="maxAge" value="2592000" />
	</bean>
 <!-- 会话管理器 -->
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
    	<!-- 修改sessionId不会出现在地址栏上 -->
    	<property name="sessionIdUrlRewritingEnabled" value="false" />
        <!-- session的失效时长，单位毫秒 -->
        <property name="globalSessionTimeout" value="600000"/>
        <!-- 删除失效的session -->
        <property name="deleteInvalidSessions" value="true"/>
    </bean>


	<bean
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="staticMethod"
			value="org.apache.shiro.SecurityUtils.setSecurityManager" />
		<property name="arguments" ref="securityManager" />
	</bean>

	<!-- 配置 Bean 后置处理器: 会自动的调用和 Spring 整合后各个组件的生命周期方法. -->
	<bean id="lifecycleBeanPostProcessor"
		class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />
</beans>  